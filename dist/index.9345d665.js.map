{"mappings":"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","sources":["js/index.js"],"sourcesContent":["//* Global Variables down below\nconst apiUrl = \"https://api.themoviedb.org/3?\"\nconst exploringEndpoint = \"discover/movie\"\nconst apiKey = \"3cb0d2bc09efade109b0b6a67290e815\"\n\nlet spotlightArray = [];\n\nlet movieWatchListArray = [];\n\nlet exploreArray = []; \nconst genresArray = [\n    {\n      \"id\": 28,\n      \"name\": \"Action\"\n    },\n    {\n      \"id\": 12,\n      \"name\": \"Adventure\"\n    },\n    {\n      \"id\": 16,\n      \"name\": \"Animation\"\n    },\n    {\n      \"id\": 35,\n      \"name\": \"Comedy\"\n    },\n    {\n      \"id\": 80,\n      \"name\": \"Crime\"\n    },\n    {\n      \"id\": 99,\n      \"name\": \"Documentary\"\n    },\n    {\n      \"id\": 18,\n      \"name\": \"Drama\"\n    },\n    {\n      \"id\": 10751,\n      \"name\": \"Family\"\n    },\n    {\n      \"id\": 14,\n      \"name\": \"Fantasy\"\n    },\n    {\n      \"id\": 36,\n      \"name\": \"History\"\n    },\n    {\n      \"id\": 27,\n      \"name\": \"Horror\"\n    },\n    {\n      \"id\": 10402,\n      \"name\": \"Music\"\n    },\n    {\n      \"id\": 9648,\n      \"name\": \"Mystery\"\n    },\n    {\n      \"id\": 10749,\n      \"name\": \"Romance\"\n    },\n    {\n      \"id\": 878,\n      \"name\": \"Science Fiction\"\n    },\n    {\n      \"id\": 10770,\n      \"name\": \"TV Movie\"\n    },\n    {\n      \"id\": 53,\n      \"name\": \"Thriller\"\n    },\n    {\n      \"id\": 10752,\n      \"name\": \"War\"\n    },\n    {\n      \"id\": 37,\n      \"name\": \"Western\"\n    }\n];\nconst genreMapping = genresArray.reduce((map, genre) => {\n    map[genre.id] = genre.name;\n    return map;\n  }, {});\n//*---------------\n\n//*   DOM Creation\nconst watchListContainer = document.getElementById(\"watchListContainer\");\n\n//*---------------\n\nwindow.addEventListener(\"DOMContentLoaded\", async function setup(event) {\n    console.log(\"DOMContentLoaded called\")\n    //Changed to await checkUserPage async fetch functions to complete before the eventListeners are put in place, ensuring that the watchlist button finds the relevant moviecontainer and its attribute data-movie-id\n    await checkUserPage()\n    setupEventListener()\n})\n\nasync function checkUserPage() {\n    // declares current page being visited\n    const currentPage = window.location.pathname;\n    \n    //* Calls all relevant functions based on where user is located\n    if(currentPage.endsWith(\"index.html\") ){\n        //TODO make it so that spotlight can also be displayed on explore\n        console.log(\"user is visiting index.html\")\n        await spotlightApiFetch()\n\n        console.log(\"spotlightApiFetch called from checkUserPage\")\n        \n        \n        displayWatchlist();\n        \n        console.log(\"displayWatchlist called from checkUserPage\")\n\n    } else if(currentPage.endsWith(\"explore.html\")){\n        console.log(\"user is visiting explore.html\")\n        \n        formSubmission()\n       await spotlightApiFetch() \n       await ExploreApiFetch(\"popularity.desc\")\n       console.log(\"ExploreApiFetch called from checkUserPage\")\n       \n       \n        displayWatchlist();\n       \n        console.log(\"displayWatchlist called from checkUserPage\")\n    }\n    \n}\n\n//* fetch functions-------------------\n\nasync function spotlightApiFetch() {\n    console.log(\"fetching data from TMDB API: Spotlight Section\")\n    try {\n        const response = await fetch(`https://api.themoviedb.org/3/trending/movie/day?api_key=${apiKey}`)\n\n        if(!response.ok){\n            snackError(response)\n            return;\n        }\n\n        const movieData = await response.json();\n        console.log(\"spotlight Data succesfullly fetched\", movieData)\n        \n        spotlightArray = movieData.results;\n        console.log(\"spotlightArray\", spotlightArray)\n        displayMovies(spotlightArray, \"spotlightContainer\")\n    \n    } catch (err) {\n        \n        console.error(\"Error fetching data:\", err.message);\n        snackError(err.message);\n\n    }\n}\nasync function ExploreApiFetch(sorting, filter) {\n    //TODO function fetching pages with option to load more.\n    console.log(\"fetching data from TMDB API: Spotlight Section\")\n    try {\n        exploreContainer.replaceChildren()\n        const totalPages = 2 \n        fetchArray = [] ;\n        for(let i = 1; i <= totalPages; i++){\n           \n            fetchArray.push(fetch(`https://api.themoviedb.org/3/discover/movie?api_key=${apiKey}&include_adult=false&include_video=false&language=en-US&page=${i}&sort_by=${sorting}&with_genres=${filter}&vote_count.gte=200`))    \n            console.log(`https://api.themoviedb.org/3/discover/movie?api_key=${apiKey}&include_adult=false&include_video=false&language=en-US&page=${i}&sort_by=${sorting}&with_genres=${filter}&vote_count.gte=200`);    \n            \n        }\n        \n        const responses = await Promise.all(fetchArray)\n        \n        const rejectedPromise = responses.find((response) => !response.ok)\n\n        if(rejectedPromise) {\n            console.error(`Error when fetching pages: ${responses.indexOf(rejectedPromise) + 1} `)\n            snackError(rejectedPromise.status)\n            return\n        }\n        console.log(\"Explore fetches all succesful\")\n        const movieData = await Promise.all(responses.map((response) => response.json()))\n\n        //combines the pages to a single array\n        exploreArray = movieData.flatMap((data) => data.results);\n        \n        console.log(\"exploreArray\", exploreArray)\n        displayMovies(exploreArray, \"exploreContainer\")\n\n        \n    } catch (error) {\n        console.error(\"Error fetching data:\", error.message)\n        snackError()\n    }\n                \n   \n}\n//-------------------\n\n//* DOM manipulation-------------------\n\nfunction createWatchlistObject(movie){\n    const movieContainer = document.createElement(\"article\")\n    movieContainer.setAttribute(\"class\", \"movieContainer\")\n    watchListContainer.appendChild(movieContainer)\n\n\n    //* title\n    const movieTitle = document.createElement(\"h4\")\n    movieTitle.textContent = movie.title\n    movieTitle.setAttribute(\"class\", \"movieTitle\")\n    movieContainer.appendChild(movieTitle)\n\n    //* Save to localStorage button\n    const watchlistButton = document.createElement(\"button\")\n    watchlistButton.setAttribute(\"class\", \"removeButton\")\n    watchlistButton.textContent = \"remove\"\n    movieContainer.appendChild(watchlistButton)\n    \n    //* backdrop_path \n    const movieImg = document.createElement(\"img\") \n    const backdropUrl = movie.backdrop_path \n        ? `https://image.tmdb.org/t/p/w500${movie.backdrop_path}` \n        : \"https://placehold.co/500x281\"\n    movieImg.setAttribute(\"src\", backdropUrl) \n    movieImg.setAttribute(\"alt\", `${movie.title} backdrop`)\n    movieImg.setAttribute(\"class\", \"movieImg\")\n    movieContainer.appendChild(movieImg)\n    \n    //* overview\n    const moviePlot = document.createElement(\"p\")\n    moviePlot.textContent = movie.overview\n    moviePlot.setAttribute(\"class\", \"moviePlot\")\n    movieContainer.appendChild(moviePlot)\n    \n    //* release_date\n    const movieRelease = document.createElement(\"p\")\n    movieRelease.textContent = `Release date :${movie.release}`;\n    movieRelease.setAttribute(\"class\", \"movieRelease\")\n    movieContainer.appendChild(movieRelease)\n}\nfunction createMovieElement(movie, container) {\n    \n    const movieContainer = document.createElement(\"article\")\n    movieContainer.setAttribute(\"class\", \"movieContainer\")\n    movieContainer.setAttribute(\"data-movie-id\", movie.id)\n    //* title\n    const movieTitle = document.createElement(\"h4\")\n    movieTitle.textContent = movie.title\n    movieTitle.setAttribute(\"class\", \"movieTitle\")\n    movieContainer.appendChild(movieTitle)\n    //* backdrop_path \n    const movieImg = document.createElement(\"img\") \n       const backdropUrl = movie.backdrop_path \n        ? `https://image.tmdb.org/t/p/w500${movie.backdrop_path}` \n        : \"https://placehold.co/500x281\"\n    movieImg.setAttribute(\"src\", backdropUrl)\n    movieImg.setAttribute(\"alt\", `${movie.title} backdrop`)\n    movieImg.setAttribute(\"class\", \"movieImg\")\n    movieContainer.appendChild(movieImg)\n    //* release_date\n    const movieRelease = document.createElement(\"p\")\n    movieRelease.textContent = `Release date :${movie.release_date}`;\n    movieRelease.setAttribute(\"class\", \"movieRelease\")\n    movieContainer.appendChild(movieRelease)\n   \n    //* Save to localStorage button\n    const watchlistButton = document.createElement(\"button\")\n    watchlistButton.setAttribute(\"class\", \"watchlistButton\")\n    watchlistButton.textContent = \"Add to Watchlist\"\n    movieContainer.appendChild(watchlistButton)\n\n    container.appendChild(movieContainer)\n}\nfunction displayMovies(movies, containerId){\n    //Makes it possible to alter what container to populate\n    const container = document.getElementById(containerId)\n\n    if(!container){\n        console.error(\"container to populate could not be found\");\n        return\n    }\n\n    container.replaceChildren()\n\n    movies.forEach(movie => createMovieElement(movie, container))\n}\n\nfunction toggleMovieOverlay(movieContainer, movie) {\n    // Check if overlay already exists\n    let overlay = movieContainer.querySelector(\".movieOverlay\");\n\n    if (!overlay) {\n        // Create overlay\n        overlay = document.createElement(\"div\");\n        overlay.setAttribute(\"class\", \"movieOverlay\");\n\n        // Add more detailed information to the overlay\n        const overlayContent = document.createElement(\"div\");\n        overlayContent.setAttribute(\"class\", \"overlayContent\");\n\n        // Add detailed movie info to the overlay\n        const detailedInfo = `\n            <h3>${movie.title}</h3>\n            <p><strong>Release Date:</strong> ${movie.release_date}</p>\n            <p><strong>Overview:</strong> ${movie.overview}</p>\n            <img src=\"https://image.tmdb.org/t/p/w500${movie.backdrop_path}\" alt=\"${movie.title}\" />\n            <p><strong>Reviews:</strong> ${movie.vote_average}/10</p>\n            <p><strong>Genres:</strong> ${movie.genre_ids.map(id => genreMapping[id] || \"Unknown Genre\")}</p>\n        `;\n        overlayContent.innerHTML = detailedInfo;\n        let body = document.body;\n\n        // Add a close button to the overlay\n        const closeButton = document.createElement(\"button\");\n        closeButton.textContent = \"Close\";\n        closeButton.setAttribute(\"class\", \"closeOverlay\");\n        closeButton.addEventListener(\"click\", () => {\n            body.classList.remove(\"dontScroll\");\n\n            overlay.remove(); // Remove overlay when close button is clicked\n        });\n        overlayContent.appendChild(closeButton);\n\n        overlay.appendChild(overlayContent);\n        body.classList.add(\"dontScroll\");\n        movieContainer.appendChild(overlay);\n    } else {\n        // If overlay already exists, remove it\n        overlay.remove();\n    }\n}\n//-------------------\n//* Watch List ------------------------\n// Centralised the eventlisteners so the movies on the explore page are also interactable. Put inside a function to wait for arrays to properly \nfunction setupEventListener() {\n\n    document.addEventListener(\"click\", function (event) {\n        //* save Movies to your watch list by stringifying it to localStorage\n        if (event.target.classList.contains(\"watchlistButton\")) {\n            \n            console.log(\"WatchlistButton pressed just now\")\n            // Chooses the elements closest to the watchlistButton that was pressed.\n        const movieContainer = event.target.closest(\".movieContainer\");\n        const movieId = movieContainer.dataset.movieId\n        console.log(\"movieId\", movieId)\n        const movie = spotlightArray.find((m) => m.id.toString() === movieId) || exploreArray.find((m) => m.id.toString() === movieId )\n        if (!movie) {\n            console.error(\"Movie not found in arrays:\", movieId);\n            return;\n        }\n        \n        event.target.textContent = \"Added\"\n        \n     // Create a movie object to stringify to JSON\n     const localMovie = {\n         movieId: movieId,\n         title: movie.title,\n         img: `https://image.tmdb.org/t/p/w500${movie.backdrop_path}`,    \n         release: movie.release_date,\n         overview: movie.overview,\n         reviews: movie.vote_average,\n         genres: movie.genre_ids\n        }\n        \n        localStorageAddition(localMovie)\n    }\n    //* Checks localStorage for a key, if the key is already there then the function will alert the user and not add the the movie again.\n    if(event.target.classList.contains(\"removeButton\")) {\n        \n\n        const movieContainer = event.target.closest(\".movieContainer\");\n        const movieId = movieContainer.dataset.movieId\n        //* Calls this function with the parameters of the localMovie Object \n        localStorageSubtraction(movieId, movieContainer)\n    }\n    //* calls the function toggleMovieOverLay, put in place so only the image calls the function\n    if (event.target.classList.contains(\"movieImg\")) {\n        const movieContainer = event.target.closest(\".movieContainer\");\n        const movieId = movieContainer.dataset.movieId; //Identifies the movie based on new attribute\n        let movie = spotlightArray.find((movie) => movie.id === Number(movieId)); \n        if (!movie) {\n            movie = exploreArray.find((movie) => movie.id === Number(movieId));\n        }\n        toggleMovieOverlay(movieContainer, movie);\n    }\n});\n\n}\nfunction localStorageAddition(localMovie){\n    const uniqueKey = localMovie.movieId;\n   if (localStorage.getItem(uniqueKey)) {\n    \n    let fakeResponse = {\"status\": \"wle\"}\n    snackError(fakeResponse)\n    \n} else {\n    localStorage.setItem(uniqueKey, JSON.stringify(localMovie))\n    console.log(\"Item succesfully put in localStorage\")\n    displayWatchlist()\n    }\n        \n}\n\nfunction localStorageSubtraction(movieContainer) {\n    //* It takes the keys (title and release) of localMovie. And removes the movie from local Storage, While also removing the movie article container \n    const uniqueKey = localMovie.movieId;\n    if (localStorage.getItem(uniqueKey)) {\n        localStorage.removeItem(uniqueKey);\n        watchListContainer.removeChild(movieContainer);\n        console.log(\"Movie successfully removed from watchlist and localStorage.\");\n    } else {\n        console.error(\"Movie not found in localStorage:\", uniqueKey);\n    }\n}\n\nfunction displayWatchlist(){\n    console.log(\"Watchlist function called\")\n        watchListContainer.replaceChildren()\n\n        for (let i = 0; i < localStorage.length; i++) {\n            const key = localStorage.key(i);\n            const movie = JSON.parse(localStorage.getItem(key));\n            console.log(\"WatchlistedMovie\", movie)\n             createWatchlistObject(movie)\n            \n        }\n    }\n\n//---------------------------\n\n//* Misc functions-------------------\nfunction snackError(response) {\n    console.log(\"snackError function error message\")\n    let status = response['status']\n    console.log(response)\n    console.log(status)\n\n    const snackbar = document.getElementById('snackbar');\n    \n    // Set the message\n\n    switch (status) {\n        case 401:\n            snackbar.textContent = \"Unauthorized! Check your API key.\";\n            break;\n        case 404:\n            snackbar.textContent = \"Resource not found!\";\n            break;\n        case 500:\n            snackbar.textContent = \"Server error. Try again later.\";\n            break;\n        case \"wle\": /* Watch List item Exists */\n            snackbar.classList.add('green')\n            snackbar.textContent = \"Already added to watch list.\";\n            break;\n        default:\n            snackbar.textContent = \"Something went wrong.\";\n    }\n\n    // Add the \"show\" class to make it visible\n    snackbar.classList.add('show');\n    \n    // Remove the \"show\" class after 3 seconds\n    setTimeout(() => {\n        snackbar.classList.remove('show');\n        snackbar.classList.remove('green');\n\n      }, 3000);\n}\n\nfunction formSubmission() { \n    console.log(\"formSubmission called\")\n    formContainer = document.getElementById(\"filterSorting\")\n    console.log(\"formContainer\", formContainer)\n\n    if (formContainer) {\n    formContainer.addEventListener(\"submit\", function(event) {\n        event.preventDefault()\n        \n        const sorting = document.getElementById(\"sortingOptions\").value\n        const filter = document.getElementById(\"filterOptions\").value\n        console.log(\"formValue 2:\", filter)\n        console.log(\"formValue 1:\", sorting)\n\n        ExploreApiFetch(sorting,filter)\n    })\n}\n\n}\n\nconsole.log(\"JavaScript file loaded correctly\")"],"names":[],"version":3,"file":"index.9345d665.js.map","sourceRoot":"/__parcel_source_root/"}