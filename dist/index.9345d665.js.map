{"mappings":"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","sources":["js/index.js"],"sourcesContent":["console.log(\"JavaScript file loaded correctly\")\n\n//* Global Variables down below\nconst itemsPerPage = 12;\n// let currentPage = 1;\n\nconst apiUrl = \"https://api.themoviedb.org/3?\"\nconst exploringEndpoint = \"discover/movie\"\nconst apiKey = \"3cb0d2bc09efade109b0b6a67290e815\"\n\n\nlet spotlightArray = [];\n\nlet movieWatchListArray = [];\n\nlet exploreArray = []; \n\nconst movieObject = {\n    id: undefined,\n    title: \"\",\n    overview: \"\",\n    img: undefined,\n    release: \"\"\n}\n\n//*---------------\n\n\n//*   DOM Creation\nconst spotlightSection = document.getElementById(\"spotlightSection\");\n\nconst watchListContainer = document.getElementById(\"watchListContainer\");\n\n//*---------------\n\nwindow.addEventListener(\"DOMContentLoaded\", async function setup(event) {\n    console.log(\"DOMContentLoaded called\")\n    checkUserPage()\n})\n\nasync function checkUserPage() {\n    // declares current page being visited\n    const currentPage = window.location.pathname;\n    \n    //* Calls all relevant functions based on where user is located\n    if(currentPage.endsWith(\"index.html\") ){\n        //TODO make it so that spotlight can also be displayed on explore\n        console.log(\"user is visiting index.html\")\n        await spotlightApiFetch()\n\n        console.log(\"spotlightApiFetch called from checkUserPage\")\n        \n        if (watchListContainer) {\n            displayWatchlist();\n        }\n        console.log(\"displayWatchlist called from checkUserPage\")\n\n    } else {\n        console.log(\"user is visiting explore.html\")\n        \n        filteringSetup()\n        console.log(\"filterSetup called from checkUserPage\")\n\n       await ExploreApiFetch()\n       console.log(\"ExploreApiFetch called from checkUserPage\")\n       \n       \n       if (watchListContainer) {\n         displayWatchlist();\n        }\n        console.log(\"displayWatchlist called from checkUserPage\")\n    }\n    \n}\n\n//* fetch functions-------------------\n\nasync function spotlightApiFetch() {\n    console.log(\"fetching data from TMDB API: Spotlight Section\")\n    try {\n        const response = await fetch(`https://api.themoviedb.org/3/discover/movie?api_key=${apiKey}&include_adult=false&include_video=false&language=en-US&page=1&sort_by=popularity.desc`)\n\n        if(!response.ok){\n            apiError(response)\n            return;\n        }\n\n        const movieData = await response.json();\n        console.log(\"spotlight Data succesfullly fetched\", movieData)\n        \n        spotlightArray = movieData.results;\n\n        console.log(\"spotlightArray\", spotlightArray)\n        spotlightArray.forEach(movie => {\n            createSpotlightObject(movie)\n    \n        });\n    \n    } catch (err) {\n        \n        console.error(\"Error fetching data:\", err.message)\n        apiError()\n\n    }\n}\n\nasync function ExploreApiFetch() {\n    //TODO function fetching pages with option to load more. need to incorporate switch case filter handling\n    console.log(\"fetching data from TMDB API: Spotlight Section\")\n    try {\n        const totalPages = 5 \n        fetchArray = [] ;\n        for(let i = 1; i <= totalPages; i++){\n           \n            fetchArray.push(fetch(`https://api.themoviedb.org/3/discover/movie?api_key=${apiKey}&include_adult=false&include_video=false&language=en-US&page=${i}&sort_by=popularity.desc`))    \n            \n        }\n\n        const responses = await Promise.all(fetchArray)\n        \n        const rejectedPromise = responses.find((response) => !response.ok)\n\n        if(rejectedPromise) {\n            console.error(`Error when fetching pages: ${responses.indexOf(rejectedPromise) + 1} `)\n            apiError(rejectedPromise.status)\n            return\n        }\n        console.log(\"Explore fetches all succesful\")\n        const movieData = await Promise.all(responses.map((response) => response.json()))\n\n        //combines the pages to a single array\n        exploreArray = movieData.flatMap((data) => data.results);\n        \n        console.log(\"exploreArray\", exploreArray)\n        exploreArray.forEach(movie => {\n            createExploreObject(movie)\n        })\n\n\n    } catch (error) {\n        console.error(\"Error fetching data:\", error.message)\n        apiError()\n    }\n                \n    //TODO Switch for sort by or alike maybe?\n}\n//-------------------\n\n//* DOM manipulation-------------------\n    //? FIX SO THE FUNCTION CAN PLACE THE ARTICLES IN DIFFERENT NODES?\nfunction createSpotlightObject(movie){\n    const movieContainer = document.createElement(\"article\")\n    movieContainer.setAttribute(\"class\", \"movieContainer\")\n    //TODO FIX SO THE FUNCTION CAN PLACE THE ARTICLES IN DIFFERENT NODES\n    spotlightSection.appendChild(movieContainer)\n\n\n    //* original_title\n    const movieTitle = document.createElement(\"h4\")\n    movieTitle.textContent = movie.original_title\n    movieTitle.setAttribute(\"class\", \"movieTitle\")\n    movieContainer.appendChild(movieTitle)\n\n    //* Save to localStorage button\n    const watchlistButton = document.createElement(\"button\")\n    watchlistButton.setAttribute(\"class\", \"watchlistButton\")\n    watchlistButton.textContent = \"Add to Watchlist\"\n    movieContainer.appendChild(watchlistButton)\n\n    //* backdrop_path \n    const movieImg = document.createElement(\"img\") \n    movieImg.setAttribute(\"src\", `https://image.tmdb.org/t/p/w500${movie.poster_path}`)\n    movieImg.setAttribute(\"alt\", movie.original_title)\n    movieImg.setAttribute(\"class\", \"movieImg\")\n    movieContainer.appendChild(movieImg)\n    \n    //* overview\n    const moviePlot = document.createElement(\"p\")\n    moviePlot.textContent = movie.overview\n    moviePlot.setAttribute(\"class\", \"moviePlot\")\n    movieContainer.appendChild(moviePlot)\n    \n    //* release_date\n    const movieRelease = document.createElement(\"p\")\n    movieRelease.textContent = movie.release_date;\n    movieRelease.setAttribute(\"class\", \"movieRelease\")\n    movieContainer.appendChild(movieRelease)\n    \n\n}\nfunction createWatchlistObject(movie){\n    const movieContainer = document.createElement(\"article\")\n    movieContainer.setAttribute(\"class\", \"movieContainer\")\n    //TODO FIX SO THE FUNCTION CAN PLACE THE ARTICLES IN DIFFERENT NODES\n    watchListContainer.appendChild(movieContainer)\n\n\n    //* original_title\n    const movieTitle = document.createElement(\"h4\")\n    movieTitle.textContent = movie.title\n    movieTitle.setAttribute(\"class\", \"movieTitle\")\n    movieContainer.appendChild(movieTitle)\n\n    //* Save to localStorage button\n    const watchlistButton = document.createElement(\"button\")\n    watchlistButton.setAttribute(\"class\", \"removeButton\")\n    watchlistButton.textContent = \"remove\"\n    movieContainer.appendChild(watchlistButton)\n\n    //* backdrop_path \n    const movieImg = document.createElement(\"img\") \n    movieImg.setAttribute(\"src\", `${movie.img}`)\n    movieImg.setAttribute(\"alt\", movie.title)\n    movieImg.setAttribute(\"class\", \"movieImg\")\n    movieContainer.appendChild(movieImg)\n    \n    //* overview\n    const moviePlot = document.createElement(\"p\")\n    moviePlot.textContent = movie.overview\n    moviePlot.setAttribute(\"class\", \"moviePlot\")\n    movieContainer.appendChild(moviePlot)\n    \n    //* release_date\n    const movieRelease = document.createElement(\"p\")\n    movieRelease.textContent = movie.release;\n    movieRelease.setAttribute(\"class\", \"movieRelease\")\n    movieContainer.appendChild(movieRelease)\n    \n\n}\nfunction createExploreObject(movie) {\n    const movieContainer = document.createElement(\"article\")\n    movieContainer.setAttribute(\"class\", \"movieContainer\")\n    exploreContainer.appendChild(movieContainer)\n\n\n    //* original_title\n    const movieTitle = document.createElement(\"h4\")\n    movieTitle.textContent = movie.original_title\n    movieTitle.setAttribute(\"class\", \"movieTitle\")\n    movieContainer.appendChild(movieTitle)\n\n    //* Save to localStorage button\n    const watchlistButton = document.createElement(\"button\")\n    watchlistButton.setAttribute(\"class\", \"watchlistButton\")\n    watchlistButton.textContent = \"Add to Watchlist\"\n    movieContainer.appendChild(watchlistButton)\n\n    //* backdrop_path \n    const movieImg = document.createElement(\"img\") \n    movieImg.setAttribute(\"src\", `https://image.tmdb.org/t/p/w500${movie.poster_path}`)\n    movieImg.setAttribute(\"alt\", movie.original_title)\n    movieImg.setAttribute(\"class\", \"movieImg\")\n    movieContainer.appendChild(movieImg)\n    \n    //* overview\n    const moviePlot = document.createElement(\"p\")\n    moviePlot.textContent = movie.overview\n    moviePlot.setAttribute(\"class\", \"moviePlot\")\n    movieContainer.appendChild(moviePlot)\n    \n    //* release_date\n    const movieRelease = document.createElement(\"p\")\n    movieRelease.textContent = movie.release_date;\n    movieRelease.setAttribute(\"class\", \"movieRelease\")\n    movieContainer.appendChild(movieRelease)\n    \n\n}\n//-------------------\n\n//* Watch List ------------------------\n\n//* Function that can save Movies to your watch list by stringifying it to localStorage, and on WindowLoaded should then decypher the data and create DOM elements in the WatchListContainer\n//TODO Savebutton for watchlist needs to be usuable in every movie container. \n//TODO Also the button needs confirm state if already added \nspotlightSection.addEventListener(\"click\", function (event){\n    if (event.target.classList.contains(\"watchlistButton\")) {\n\n           console.log(\"WatchlistButton pressed just now\")\n           // Chooses the elements closest to the watchlistButton that was pressed.\n           const movieContainer = event.target.closest(\".movieContainer\");\n           const movieTitle = movieContainer.querySelector(\".movieTitle\").textContent;\n           const movieOverview = movieContainer.querySelector(\".moviePlot\").textContent;\n           const movieRelease = movieContainer.querySelector(\".movieRelease\").textContent;\n           const movieImg = movieContainer.querySelector(\".movieImg\").src;\n\n        \n        // Create a movie object to stringify to JSON\n        const localMovie = {\n            title: movieTitle,\n            overview: movieOverview,\n            release: movieRelease,\n            img: movieImg        \n        }\n        //TODO återkoppling på knappttryck\n        localStorageAddition(localMovie)\n    }   \n})\n\n//* Function that is tied to the remove button, so you can remove Movies in your watchlist. \nwatchListContainer.addEventListener(\"click\", function(event) {\n    console.log(\"remove button pressed\")\n    //*If event checks to see if there is a remove button in watchListContainer\n    if(event.target.classList.contains(\"removeButton\")) {\n        //* And with queryselector it finds the  DOM elements, that are then passed to keys for localMovie\n        const movieContainer = event.target.closest(\".movieContainer\");\n        const movieTitle = movieContainer.querySelector(\".movieTitle\").textContent;\n        const movieOverview = movieContainer.querySelector(\".moviePlot\").textContent;\n        const movieRelease = movieContainer.querySelector(\".movieRelease\").textContent;\n        const movieImg = movieContainer.querySelector(\".movieImg\").src;\n        \n        // Create a movie object to stringify to JSON\n        const localMovie = {\n            title: movieTitle,\n            overview: movieOverview,\n            release: movieRelease,\n            img: movieImg        \n        }\n        //* Calls this function with the parameters of the localMovie Object \n        localStorageSubtraction(localMovie, movieContainer)\n    }\n})\n\n//* Checks localStorage for a key, if the key is already there then the function will alert the user and not add the the movie again. Preventing duplications of items in the watchlist. \nfunction localStorageAddition(localMovie){\n   if (localStorage.key(`${localMovie.title}-${localMovie.release}` !== `${localMovie.title}-${localMovie.release}`)) {\n    //TODO More flashy error handling needed   \n    alert(\"item already added to watchlist\")\n    \n} else {\n    const uniqueKey = `${localMovie.title}-${localMovie.release}`\n    localStorage.setItem(uniqueKey, JSON.stringify(localMovie))\n    console.log(\"Item succesfully put in localStorage\")\n    displayWatchlist()\n    }\n        \n}\n\nfunction localStorageSubtraction(localMovie, movieContainer) {\n    console.log(\"it came to here\")\n    //* It takes the keys (title and release) of localMovie. And removes the movie from local Storage, While also removing the movie article container \n    const uniqueKey = `${localMovie.title}-${localMovie.release}`\n    localStorage.removeItem(uniqueKey)\n\n    watchListContainer.removeChild(movieContainer)\n\n}\n\nfunction displayWatchlist(){\n    console.log(\"Watchlist function called\")\n    if (localStorage.length >= 0) {\n\n        for (let i = 0; i < localStorage.length; i++) {\n            const key = localStorage.key(i);\n            const movie = JSON.parse(localStorage.getItem(key));\n            console.log(\"WatchlistedMovie\", movie)\n            createWatchlistObject(movie)\n        }\n    }\n}\n//---------------------------\n\n\n//* Misc functions-------------------\n\nfunction apiError(status) {\n    console.log(\"ApiError function error message\")\n    switch (status) {\n        case 401:\n            alert(\"Unauthorized! Check your API key.\");\n            break;\n        case 404:\n            alert(\"Resource not found!\");\n            break;\n        case 500:\n            alert(\"Server error. Try again later.\");\n            break;\n        default:\n            alert(\"Something went wrong.\");\n    }\n}\n\n// dropDown menu for filtering movies\nfunction filteringSetup(){\n    //TODO if the filterbutton is pressed twice, two sets of buttons show, might be class and id mixup\n    console.log(\"filterSetup called\")\n\n    const filterButton = document.getElementById(\"filterButton\")\n    if (filterButton) {\n        filterButton.addEventListener('click', () => {\n            console.log(\"filter by clicked\")\n                        \n            let dropDownMenu = document.getElementById(\"dropDownMenu\")\n            if (!dropDownMenu) {\n                console.log(\"creating filter container for menu of categories\")\n                dropDownMenu = document.createElement(\"div\")\n                dropDownMenu.setAttribute(\"id\", \"dropDownMenu\")\n\n               const filterCategories = [\"genre 1\",\n                    \"genre 2\",\n                    \"genre 3\",\n                    \"genre 4\",\n                    \"genre 5\",\n                    \"genre 6\",\n                    \"genre 7\",\n                    \"genre 8\",\n                ]\n               \n                filterCategories.forEach((genre) => {\n                    const categoryButton = document.createElement(\"button\")\n                    categoryButton.textContent = genre;\n\n                        \n                    categoryButton.addEventListener(\"click\", () => {\n                        console.log(`categoryButton clicked: ${categoryButton.textContent}`);\n                        handleUserSelection(genre); // Call function based on button value\n                        dropDownMenu.remove(); // Remove dropdown after selection\n                        \n                    });\n                    dropDownMenu.appendChild(categoryButton);\n                });\n                filterButton.parentElement.appendChild(dropDownMenu);\n            } else {\n                dropDownMenu.remove(); // Toggle visibility by removing\n            }\n        });\n    }\n    document.addEventListener(\"click\", (event) => {\n        const dropDownMenu = document.getElementById(\"dropDownMenu\");\n        if (\n            dropDownMenu &&\n            !dropDownMenu.contains(event.target) &&\n            event.target !== filterButton\n        ) {\n            console.log(\"remove dropDownMenu\");\n            dropDownMenu.remove();\n        }\n    });\n}\n\n\nfunction handleUserSelection(genre) {\n console.log(\"handleUserSelection function called with value:\", genre)\n}\n\n\n//*filter by genre for the filter function. \n//?in the same endpoint Check movieobjects key: genre_ids. with a numerical value(or array of several)\n\n// when for example the fantasy genre button should handle an switch case if pressed it should give value of 18 and the fetch paramters will be adjusted accordingly 1\n\n\n            //! Next step is: \n            // Async planning\n            \n            // SÅ SOM\n            //             OBS!    [filter by],\n                        \n            //             filter by  in exploringContainer.\n            //             When the user presses filter by button (onclick)\n                        \n            //             Dropdown nodeElement shoud display 4 or more buttons for different  parameters \n            //             they should be handled with a switch case to get the corresponding endpoint/parameter\n                        \n            //             possible endpoint = https://developer.themoviedb.org/reference/genre-movie-list \n                        \n            //             possible endpoint https://developer.themoviedb.org/reference/discover-movie\n            \n            //             Possible endpoint = https://developer.themoviedb.org/reference/movie-popular-list\n            \n            \n            //             OBS!    [searchinput].\n                            \n            //                 Search endpoint https://developer.themoviedb.org/reference/search-movie\n            \n            \n            //             function that takes user input to search for a movie by title and populates the explore container with possible results\n                        \n            //             headerinput should make a a search in movielist(GlobalSearch) or smth alike, If user on home, open explore tab and results should display in explore\n            \n            //             search inpput in explore --> main section should search by title in current endpoint being displayed(LocalSearch)\n            \n            \n            \n            //             OBS!    [Hämta flera pages från api med promise.all]\n            //             async function that should fetch several pages from the API and handle all the results with promise.all\n            \n            \n            //             OBS! when clicking a movie object, it could fetch the reviews for the movie in a modal of some kind\n            //             https://developer.themoviedb.org/reference/review-details\n                        \n            // }\n"],"names":[],"version":3,"file":"index.9345d665.js.map","sourceRoot":"/__parcel_source_root/"}