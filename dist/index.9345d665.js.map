{"mappings":"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","sources":["js/index.js"],"sourcesContent":["console.log(\"JavaScript file loaded correctly\")\n\n//* Global Variables down below\nconst itemsPerPage = 12;\n// let currentPage = 1;\n\nconst apiUrl = \"https://api.themoviedb.org/3?\"\nconst exploringEndpoint = \"discover/movie\"\nconst apiKey = \"3cb0d2bc09efade109b0b6a67290e815\"\n\n\nlet spotlightArray = [];\n\nlet movieWatchListArray = [];\n\nlet exploreArray = []; \n\nconst movieObject = {\n    id: undefined,\n    title: \"\",\n    overview: \"\",\n    img: undefined,\n    release: \"\"\n}\n\n//*---------------\n\n\n//*   DOM Creation\nconst spotlightSection = document.getElementById(\"spotlightSection\");\n\nconst watchListContainer = document.getElementById(\"watchListContainer\");\n\n//*---------------\n\nwindow.addEventListener(\"DOMContentLoaded\", async function setup(event) {\n    console.log(\"DOMContentLoaded called\")\n    checkUserPage()\n})\n\nasync function checkUserPage() {\n    // declares current page being visited\n    const currentPage = window.location.pathname;\n    \n    //* Calls all relevant functions based on where user is located\n    if(currentPage.endsWith(\"index.html\") ){\n        //TODO make it so that spotlight can also be displayed on explore\n        console.log(\"user is visiting index.html\")\n        await spotlightApiFetch()\n\n        console.log(\"spotlightApiFetch called from checkUserPage\")\n        \n        if (watchListContainer) {\n            displayWatchlist();\n        }\n        console.log(\"displayWatchlist called from checkUserPage\")\n\n    } else if(currentPage.endsWith(\"explore.html\")){\n        console.log(\"user is visiting explore.html\")\n        \n        formSubmission()\n        // filteringSetup()\n        // console.log(\"filterSetup called from checkUserPage\")\n\n       await ExploreApiFetch(\"popularity.desc\")\n       console.log(\"ExploreApiFetch called from checkUserPage\")\n       \n       \n       if (watchListContainer) {\n         displayWatchlist();\n        }\n        console.log(\"displayWatchlist called from checkUserPage\")\n    }\n    \n}\n\n//* fetch functions-------------------\n\nasync function spotlightApiFetch() {\n    console.log(\"fetching data from TMDB API: Spotlight Section\")\n    try {\n\n        //https://developer.themoviedb.org/reference/trending-movies instead\n        const response = await fetch(`https://api.themoviedb.org/3/trending/movie/day?api_key=${apiKey}`)\n\n        if(!response.ok){\n            snackError(response)\n            return;\n        }\n\n        const movieData = await response.json();\n        console.log(\"spotlight Data succesfullly fetched\", movieData)\n        \n        spotlightArray = movieData.results;\n\n        console.log(\"spotlightArray\", spotlightArray)\n        spotlightArray.forEach(movie => {\n            createSpotlightObject(movie)\n    \n        });\n    \n    } catch (err) {\n        \n        console.error(\"Error fetching data:\", err.message);\n        snackError(err.message);\n\n    }\n}\nfunction toggleMovieOverlay(movieContainer, movie) {\n    // Check if overlay already exists\n    let overlay = movieContainer.querySelector(\".movieOverlay\");\n\n    if (!overlay) {\n        // Create overlay\n        overlay = document.createElement(\"div\");\n        overlay.setAttribute(\"class\", \"movieOverlay\");\n\n        // Add more detailed information to the overlay\n        const overlayContent = document.createElement(\"div\");\n        overlayContent.setAttribute(\"class\", \"overlayContent\");\n\n        // Add detailed movie info to the overlay\n        const detailedInfo = `\n            <h3>${movie.title}</h3>\n            <p><strong>Release Date:</strong> ${movie.release_date}</p>\n            <p><strong>Overview:</strong> ${movie.overview}</p>\n            <img src=\"https://image.tmdb.org/t/p/w500${movie.backdrop_path}\" alt=\"${movie.title}\" />\n            <p><strong>Reviews:</strong>${movie.vote_average}/10</p>\n            <p><strong>Genres:</strong>${movie.genre_ids}</p>\n        `;\n        overlayContent.innerHTML = detailedInfo;\n\n        // Add a close button to the overlay\n        const closeButton = document.createElement(\"button\");\n        closeButton.textContent = \"Close\";\n        closeButton.setAttribute(\"class\", \"closeOverlay\");\n        closeButton.addEventListener(\"click\", () => {\n            overlay.remove(); // Remove overlay when close button is clicked\n        });\n        overlayContent.appendChild(closeButton);\n\n        overlay.appendChild(overlayContent);\n        movieContainer.appendChild(overlay);\n    } else {\n        // If overlay already exists, remove it\n        overlay.remove();\n    }\n}\nasync function ExploreApiFetch(sorting, filter) {\n    //TODO function fetching pages with option to load more. need to incorporate switch case filter handling\n    console.log(\"fetching data from TMDB API: Spotlight Section\")\n    try {\n        exploreContainer.replaceChildren()\n        const totalPages = 2 \n        fetchArray = [] ;\n        for(let i = 1; i <= totalPages; i++){\n           \n            fetchArray.push(fetch(`https://api.themoviedb.org/3/discover/movie?api_key=${apiKey}&include_adult=false&include_video=false&language=en-US&page=${i}&sort_by=${sorting}&with_genre=${filter}&vote_count.gte=200`))    \n            console.log(`https://api.themoviedb.org/3/discover/movie?api_key=${apiKey}&include_adult=false&include_video=false&language=en-US&page=${i}&sort_by=${sorting}&with_genre=${filter}&vote_count.gte=200`);    \n            \n        }\n\n        const responses = await Promise.all(fetchArray)\n        \n        const rejectedPromise = responses.find((response) => !response.ok)\n\n        if(rejectedPromise) {\n            console.error(`Error when fetching pages: ${responses.indexOf(rejectedPromise) + 1} `)\n            snackError(rejectedPromise.status)\n            return\n        }\n        console.log(\"Explore fetches all succesful\")\n        const movieData = await Promise.all(responses.map((response) => response.json()))\n\n        //combines the pages to a single array\n        exploreArray = movieData.flatMap((data) => data.results);\n        \n        console.log(\"exploreArray\", exploreArray)\n        exploreArray.forEach(movie => {\n            createExploreObject(movie)\n        })\n\n\n    } catch (error) {\n        console.error(\"Error fetching data:\", error.message)\n        snackError()\n    }\n                \n   \n}\n//-------------------\n\n//* DOM manipulation-------------------\n\nfunction createSpotlightObject(movie){\n    const backdropPath = movie.backdrop_path\n\n    const movieContainer = document.createElement(\"article\")\n    movieContainer.setAttribute(\"class\", \"movieContainer\")\n    spotlightSection.appendChild(movieContainer)\n\n    //* title\n    const movieTitle = document.createElement(\"h4\")\n    movieTitle.textContent = movie.title\n    movieTitle.setAttribute(\"class\", \"movieTitle\")\n    movieContainer.appendChild(movieTitle)\n\n    //* Save to localStorage button\n    const watchlistButton = document.createElement(\"button\")\n    watchlistButton.setAttribute(\"class\", \"watchlistButton\")\n    watchlistButton.textContent = \"Add to Watchlist\"\n    movieContainer.appendChild(watchlistButton)\n    \n    //* backdrop_path \n    const movieImg = document.createElement(\"img\") \n    const backdropUrl = movie.backdrop_path \n    ? `https://image.tmdb.org/t/p/w500${movie.backdrop_path}` \n    : \"https://placehold.co/500x281\"\n    movieImg.setAttribute(\"src\", backdropUrl)\n    movieImg.setAttribute(\"alt\", movie.title)\n    movieImg.setAttribute(\"class\", \"movieImg\")\n    movieContainer.appendChild(movieImg)\n    \n    //* overview\n    const moviePlot = document.createElement(\"p\")\n    moviePlot.textContent = movie.overview\n    moviePlot.setAttribute(\"class\", \"moviePlot\")\n    movieContainer.appendChild(moviePlot)\n    \n    //* release_date\n    const movieRelease = document.createElement(\"p\")\n    movieRelease.textContent = movie.release_date;\n    movieRelease.setAttribute(\"class\", \"movieRelease\")\n    movieContainer.appendChild(movieRelease)\n    \n    movieContainer.addEventListener(\"click\", () => toggleMovieOverlay(movieContainer, movie));\n\n}\nfunction createWatchlistObject(movie){\n    const movieContainer = document.createElement(\"article\")\n    movieContainer.setAttribute(\"class\", \"movieContainer\")\n    //TODO FIX SO THE FUNCTION CAN PLACE THE ARTICLES IN DIFFERENT NODES\n    watchListContainer.appendChild(movieContainer)\n\n\n    //* title\n    const movieTitle = document.createElement(\"h4\")\n    movieTitle.textContent = movie.title\n    movieTitle.setAttribute(\"class\", \"movieTitle\")\n    movieContainer.appendChild(movieTitle)\n\n    //* Save to localStorage button\n    const watchlistButton = document.createElement(\"button\")\n    watchlistButton.setAttribute(\"class\", \"removeButton\")\n    watchlistButton.textContent = \"remove\"\n    movieContainer.appendChild(watchlistButton)\n\n    //* backdrop_path \n    const movieImg = document.createElement(\"img\") \n    movieImg.setAttribute(\"src\", `${movie.img}`)\n    movieImg.setAttribute(\"alt\", movie.title)\n    movieImg.setAttribute(\"class\", \"movieImg\")\n    movieContainer.appendChild(movieImg)\n    \n    //* overview\n    const moviePlot = document.createElement(\"p\")\n    moviePlot.textContent = movie.overview\n    moviePlot.setAttribute(\"class\", \"moviePlot\")\n    movieContainer.appendChild(moviePlot)\n    \n    //* release_date\n    const movieRelease = document.createElement(\"p\")\n    movieRelease.textContent = movie.release;\n    movieRelease.setAttribute(\"class\", \"movieRelease\")\n    movieContainer.appendChild(movieRelease)\n    \n\n}\nfunction createExploreObject(movie) {\n   \n    const movieContainer = document.createElement(\"article\")\n    movieContainer.setAttribute(\"class\", \"movieContainer\")\n    exploreContainer.appendChild(movieContainer)\n\n\n    //* title\n    const movieTitle = document.createElement(\"h4\")\n    movieTitle.textContent = movie.title \n    movieTitle.setAttribute(\"class\", \"movieTitle\")\n    movieContainer.appendChild(movieTitle)\n\n    //* Save to localStorage button\n    const watchlistButton = document.createElement(\"button\")\n    watchlistButton.setAttribute(\"class\", \"watchlistButton\")\n    watchlistButton.textContent = \"Add to Watchlist\"\n    movieContainer.appendChild(watchlistButton)\n\n    //* backdrop_path \n    const movieImg = document.createElement(\"img\") \n    const backdropUrl = movie.backdrop_path \n        ? `https://image.tmdb.org/t/p/w500${movie.backdrop_path}` \n        : \"https://placehold.co/500x281\"\n    movieImg.setAttribute(\"src\", backdropUrl) \n    movieImg.setAttribute(\"alt\", movie.title)\n    movieImg.setAttribute(\"class\", \"movieImg\")\n    movieContainer.appendChild(movieImg)\n    \n    //* overview\n    const moviePlot = document.createElement(\"p\")\n    moviePlot.textContent = movie.overview\n    moviePlot.setAttribute(\"class\", \"moviePlot\")\n    movieContainer.appendChild(moviePlot)\n    \n    //* release_date\n    const movieRelease = document.createElement(\"p\")\n    movieRelease.textContent = movie.release_date;\n    movieRelease.setAttribute(\"class\", \"movieRelease\")\n    movieContainer.appendChild(movieRelease)\n    \n\n}\n//-------------------\n\n//* Watch List ------------------------\n\n//* Function that can save Movies to your watch list by stringifying it to localStorage, and on WindowLoaded should then decypher the data and create DOM elements in the WatchListContainer\n//TODO Savebutton for watchlist needs to be usuable in every movie container. \n//TODO Also the button needs confirm state if already added \nspotlightSection.addEventListener(\"click\", function (event){\n    if (event.target.classList.contains(\"watchlistButton\")) {\n\n           console.log(\"WatchlistButton pressed just now\")\n           // Chooses the elements closest to the watchlistButton that was pressed.\n           const movieContainer = event.target.closest(\".movieContainer\");\n           const movieTitle = movieContainer.querySelector(\".movieTitle\").textContent;\n           const movieOverview = movieContainer.querySelector(\".moviePlot\").textContent;\n           const movieRelease = movieContainer.querySelector(\".movieRelease\").textContent;\n           const movieImg = movieContainer.querySelector(\".movieImg\").src;\n           \n        \n        // Create a movie object to stringify to JSON\n        const localMovie = {\n            title: movieTitle,\n            overview: movieOverview,\n            release: movieRelease,\n            img: movieImg        \n        }\n        //TODO återkoppling på knappttryck\n        localStorageAddition(localMovie)\n    }   \n})\n\n//* Function that is tied to the remove button, so you can remove Movies in your watchlist. \nwatchListContainer.addEventListener(\"click\", function(event) {\n    console.log(\"remove button pressed\")\n    //*If event checks to see if there is a remove button in watchListContainer\n    if(event.target.classList.contains(\"removeButton\")) {\n        //* And with queryselector it finds the  DOM elements, that are then passed to keys for localMovie\n        const movieContainer = event.target.closest(\".movieContainer\");\n        const movieTitle = movieContainer.querySelector(\".movieTitle\").textContent;\n        const movieOverview = movieContainer.querySelector(\".moviePlot\").textContent;\n        const movieRelease = movieContainer.querySelector(\".movieRelease\").textContent;\n        const movieImg = movieContainer.querySelector(\".movieImg\").src;\n        \n        // Create a movie object to stringify to JSON\n        const localMovie = {\n            title: movieTitle,\n            overview: movieOverview,\n            release: movieRelease,\n            img: movieImg        \n        }\n        //* Calls this function with the parameters of the localMovie Object \n        localStorageSubtraction(localMovie, movieContainer)\n    }\n})\n\n//* Checks localStorage for a key, if the key is already there then the function will alert the user and not add the the movie again. Preventing duplications of items in the watchlist. \nfunction localStorageAddition(localMovie){\n   if (localStorage.key(`${localMovie.title}-${localMovie.release}` !== `${localMovie.title}-${localMovie.release}`)) {\n    //TODO More flashy error handling needed   \n    // alert(\"item already added to watchlist\")\n    let fakeResponse = {\"status\": \"wle\"}\n    snackError(fakeResponse)\n    \n} else {\n    const uniqueKey = `${localMovie.title}-${localMovie.release}`\n    localStorage.setItem(uniqueKey, JSON.stringify(localMovie))\n    console.log(\"Item succesfully put in localStorage\")\n    displayWatchlist()\n    }\n        \n}\n\nfunction localStorageSubtraction(localMovie, movieContainer) {\n    console.log(\"it came to here\")\n    //* It takes the keys (title and release) of localMovie. And removes the movie from local Storage, While also removing the movie article container \n    const uniqueKey = `${localMovie.title}-${localMovie.release}`\n    localStorage.removeItem(uniqueKey)\n\n    watchListContainer.removeChild(movieContainer)\n\n}\n\nfunction displayWatchlist(){\n    console.log(\"Watchlist function called\")\n    if (localStorage.length >= 0) {\n\n        for (let i = 0; i < localStorage.length; i++) {\n            const key = localStorage.key(i);\n            const movie = JSON.parse(localStorage.getItem(key));\n            console.log(\"WatchlistedMovie\", movie)\n            createWatchlistObject(movie)\n        }\n    }\n}\n//---------------------------\n\n\n//* Misc functions-------------------\n\nfunction snackError(response) {\n    console.log(\"ApiError function error message\")\n    let status = response['status']\n    console.log(response)\n    console.log(status)\n\n\n    const snackbar = document.getElementById('snackbar');\n    \n    // Set the message\n\n\n    switch (status) {\n        case 401:\n            snackbar.textContent = \"Unauthorized! Check your API key.\";\n            break;\n        case 404:\n            snackbar.textContent = \"Resource not found!\";\n            break;\n        case 500:\n            snackbar.textContent = \"Server error. Try again later.\";\n            break;\n        case \"wle\": /* Watch List item Exists */\n            snackbar.classList.add('green')\n            snackbar.textContent = \"Already added to watch list.\";\n            break;\n        default:\n            snackbar.textContent = \"Something went wrong.\";\n    }\n\n    // Add the \"show\" class to make it visible\n    snackbar.classList.add('show');\n\n    // Remove the \"show\" class after 3 seconds\n    setTimeout(() => {\n        snackbar.classList.remove('show');\n        snackbar.classList.remove('green');\n      }, 3000);\n}\n\n\nfunction formSubmission() { \n    console.log(\"formSubmission called\")\n    formContainer = document.getElementById(\"filterSorting\")\n    console.log(\"formContainer\", formContainer)\n\n    if (formContainer) {\n    formContainer.addEventListener(\"submit\", function(event) {\n        event.preventDefault()\n        \n        const sorting = document.getElementById(\"sortingOptions\").value\n        const filter = document.getElementById(\"filterOptions\").value\n        console.log(\"formValue 2:\", filter)\n        console.log(\"formValue 1:\", sorting)\n\n        ExploreApiFetch(sorting,filter)\n    })\n}\n\n}\n\n\nconsole.log(\"JavaScript file loaded correctly\")"],"names":[],"version":3,"file":"index.9345d665.js.map","sourceRoot":"/__parcel_source_root/"}